Author:	T. Bourke (CSE/NICTA UNSW)

This software is a prototype only. It most likely contains undiscovered
faults. Caveat Modellor.

One good sanity check is to check trace inclusion of a model with itself,
i.e. given AUTO, construct AUTO' then check:
    AUTO || AUTO'  |=  A[] not AUTO'.Err
A failure can indicate a bug in urpal, or an initial model that is not
deterministic. The sanity check can be passed even if, or because, AUTO'
refuses to participate in an action with AUTO. This should never happen if
the construction is performed correctly; it would indicate a bug in urpal.
Running a simulation can increase confidence in AUTO'.

The layout routines do not give perfect results, but they usually make the
basic structure clear enough so that sense can be made of counter-example
traces, and they are a reasonable starting point for manual rearrangement
of label positions (the transition nails make other changes painful). If the
results are very poor, try:
  * using scale() to enlarge the source model before generating the tester
  * using tabulate(<tester>, {Err}) to organize labels differently
  * try both fdp (graphviz { engine=fdp }) and neato (graphviz { engine=fdp })

The program works best under unix, but it will also function under Cygwin.

Bugs may be reported to tbourke@cse.unsw.edu.au

T. Bourke (CSE/NICTA UNSW).
2007-12-05

Initial Configuration
---------------------
   1) Install Graphviz.
      The program will work without Graphviz, although it will complain
      often and most automatic layout features will be disabled.

      Under windows, the program has been tested against the normal version
      of Graphviz (not a version specially compiled for Cygwin).

   2) Download flat-1_1.dtd:
      http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd

   3) Edit two entries in urpalrc:
	dtd_path	    should point to flat-1_1.dtd
	graphviz/path	    should point to the graphviz installation
			    directory (which has a bin/ subdirectory)

Running the program
-------------------
1) Listing templates in an Uppaal model:
     urpal -i limitedbind.xml -e show

2) Creating the testing construction:
     urpal -i limitedbind.xml -o test.xml -e 'TEST=maketest(Template)'

3) If the result is hard to read, try variations of:
     urpal -i limitedbind.xml -o test.xml -e 'TEST=tabulate(maketest(scale(Template,2.0)),{Err})'

Further commands and options are listed in the included documentation.

